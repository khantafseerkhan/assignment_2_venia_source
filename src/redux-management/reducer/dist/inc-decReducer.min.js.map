{"version":3,"sources":["inc-decReducer.js"],"names":["initialstate","value","allproductdata","cartProduct","localStorage","getItem","JSON","parse","totalOfall","coupon","changeTheState","arguments","length","undefined","type","action","state","updateproductslist","console","log","data","updateCartProduct","temparray","index","quantity","setItem","stringify","calPriceSummary","shippingCharge","cartCount","giftCard","etax","splice","findIndex","x","id","inputdata","element","price"],"mappings":"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","file":"inc-decReducer.min.js","sourcesContent":["\r\nlet initialstate = {\r\n\r\n  value: 10,\r\n  allproductdata: [],\r\n  cartProduct: localStorage.getItem(\"cartdata\")?JSON.parse(localStorage.getItem(\"cartdata\")):[],\r\n  totalOfall: localStorage.getItem(\"totalofall\")?localStorage.getItem(\"totalofall\"):0,\r\n  coupon: 20,\r\n  giftCard: 10,\r\n  etax: 50,\r\n  shippingCharge: 0,\r\n  cartCount: 0\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const changeTheState = (state = initialstate, action) => {\r\n  switch (action.type) {\r\n    case 'Increament':\r\n      return { value: state.value + 1 }\r\n    case 'Decrement':\r\n      return { value: state.value - 1 }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport const updateproductslist = (state = initialstate, action) => {\r\n\r\n  if (action.type == \"updateproductslist\") {\r\n    console.log(\"length   =\" + action.data.length)\r\n    return {\r\n      value: state.value,\r\n      allproductdata: action.data\r\n    }\r\n  } else {\r\n    return state;\r\n  }\r\n}\r\nexport const updateCartProduct = (state = initialstate, action) => {\r\n\r\n\r\n  if (action.type == \"add\") {\r\n    let temparray = state.cartProduct;\r\n\r\n    let index = temparray.findIndex(x => x.id == action.data.id);\r\n    if (index != -1) {\r\n\r\n      temparray[index].quantity = temparray[index].quantity + action.data.quantity;\r\n\r\n      localStorage.setItem(\"cartdata\", JSON.stringify(temparray))\r\n      localStorage.setItem(\"totalofall\",calPriceSummary(temparray))\r\n\r\n      return {\r\n        value: state.value,\r\n        allproductdata: state.allproductdata,\r\n        cartProduct: temparray,\r\n        totalOfall: calPriceSummary(temparray),\r\n        coupon: state.coupon,\r\n        giftCard: state.giftCard,\r\n        etax: state.etax,\r\n        shippingCharge: state.shippingCharge,\r\n        cartCount: temparray.length\r\n\r\n      }\r\n\r\n\r\n\r\n    } else {\r\n      temparray.push(action.data);\r\n\r\n      localStorage.setItem(\"cartdata\", JSON.stringify(temparray))\r\n      localStorage.setItem(\"totalofall\",calPriceSummary(temparray))\r\n      return {\r\n        value: state.value,\r\n        allproductdata: state.allproductdata,\r\n        cartProduct: temparray,\r\n        totalOfall: calPriceSummary(temparray),\r\n        coupon: state.coupon,\r\n        giftCard: state.giftCard,\r\n        etax: state.etax,\r\n        shippingCharge: state.shippingCharge,\r\n        cartCount: temparray.length\r\n\r\n\r\n\r\n      }\r\n\r\n    }\r\n  } else if (action.type == \"update\") {\r\n    return state\r\n  } else if (action.type == \"remove\") {\r\n    let temparray = state.cartProduct;\r\n\r\n    if (action.data != -1) {\r\n\r\n      temparray.splice(action.data, 1);\r\n\r\n      localStorage.setItem(\"cartdata\", JSON.stringify(temparray))\r\n      localStorage.setItem(\"totalofall\",calPriceSummary(temparray))\r\n\r\n      return {\r\n        value: state.value,\r\n        allproductdata: state.allproductdata,\r\n        cartProduct: temparray,\r\n        totalOfall: calPriceSummary(temparray),\r\n        coupon: state.coupon,\r\n        giftCard: state.giftCard,\r\n        etax: state.etax,\r\n        shippingCharge: state.shippingCharge,\r\n        cartCount: temparray.length\r\n\r\n\r\n      }\r\n    } else {\r\n      return state;\r\n    }\r\n  } else if (action.type == \"incQuantity\") {\r\n    let temparray = state.cartProduct;\r\n    let index = temparray.findIndex(x => x.id == action.data);\r\n    temparray[index].quantity = temparray[index].quantity + 1;\r\n\r\n    localStorage.setItem(\"cartdata\", JSON.stringify(temparray))\r\n    localStorage.setItem(\"totalofall\",calPriceSummary(temparray))\r\n\r\n    return {\r\n      value: state.value,\r\n      allproductdata: state.allproductdata,\r\n      cartProduct: temparray,\r\n      totalOfall: calPriceSummary(temparray),\r\n      coupon: state.coupon,\r\n      giftCard: state.giftCard,\r\n      etax: state.etax,\r\n      shippingCharge: state.shippingCharge,\r\n      cartCount: temparray.length\r\n\r\n\r\n\r\n    }\r\n  } else if (action.type == \"decQuantity\") {\r\n    let temparray = state.cartProduct;\r\n    let index = temparray.findIndex(x => x.id == action.data);\r\n    if (temparray[index].quantity > 1) {\r\n      temparray[index].quantity = temparray[index].quantity - 1;\r\n\r\n      localStorage.setItem(\"cartdata\", JSON.stringify(temparray))\r\n      localStorage.setItem(\"totalofall\",calPriceSummary(temparray))\r\n\r\n      return {\r\n        value: state.value,\r\n        allproductdata: state.allproductdata,\r\n        cartProduct: temparray,\r\n        totalOfall: calPriceSummary(temparray),\r\n        coupon: state.coupon,\r\n        giftCard: state.giftCard,\r\n        etax: state.etax,\r\n        shippingCharge: state.shippingCharge,\r\n        cartCount: temparray.length\r\n\r\n\r\n      }\r\n    }\r\n\r\n  } else {\r\n    return state;\r\n  }\r\n}\r\n\r\nconst calPriceSummary = (inputdata) => {\r\n\r\n  let totalOfall = 0;\r\n  inputdata.forEach(element => {\r\n    totalOfall = totalOfall + (element.price * element.quantity);\r\n  });\r\n  return totalOfall;\r\n}\r\n\r\n"]}