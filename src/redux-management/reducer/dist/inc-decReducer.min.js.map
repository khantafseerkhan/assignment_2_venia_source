{"version":3,"sources":["inc-decReducer.js"],"names":["initialstate","value","allproductdata","cartProduct","totalOfall","changeTheState","arguments","length","undefined","type","action","state","updateproductslist","console","log","data","updateCartProduct","findIndex","x","id","temparray","index","quantity","calPriceSummary","coupon","giftCard","etax","shippingCharge","inputdata","element"],"mappings":"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","file":"inc-decReducer.min.js","sourcesContent":["\r\nlet initialstate = {\r\n\r\n  value: 10,\r\n  allproductdata: [],\r\n  cartProduct: [],\r\n  totalOfall: 0,\r\n  coupon: 20,\r\n  giftCard: 10,\r\n  etax: 50,\r\n  shippingCharge: 0\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const changeTheState = (state = initialstate, action) => {\r\n  switch (action.type) {\r\n    case 'Increament':\r\n      return { value: state.value + 1 }\r\n    case 'Decrement':\r\n      return { value: state.value - 1 }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport const updateproductslist = (state = initialstate, action) => {\r\n\r\n  if (action.type == \"updateproductslist\") {\r\n    console.log(\"length   =\" + action.data.length)\r\n    return {\r\n      value: state.value,\r\n      allproductdata: action.data\r\n    }\r\n  } else {\r\n    return state;\r\n  }\r\n}\r\nexport const updateCartProduct = (state = initialstate, action) => {\r\n\r\n  if (action.type == \"add\") {\r\n    let temparray = state.cartProduct;\r\n\r\n    let index = temparray.findIndex(x => x.id == action.data.id);\r\n    if (index != -1) {\r\n\r\n      temparray[index].quantity = temparray[index].quantity + action.data.quantity;\r\n      return {\r\n        value: state.value,\r\n        allproductdata: state.allproductdata,\r\n        cartProduct: temparray,\r\n        totalOfall: calPriceSummary(temparray),\r\n        coupon: state.coupon,\r\n        giftCard: state.giftCard,\r\n        etax: state.etax,\r\n        shippingCharge: state.shippingCharge\r\n\r\n      }\r\n\r\n    } else {\r\n      temparray.push(action.data);\r\n      return {\r\n        value: state.value,\r\n        allproductdata: state.allproductdata,\r\n        cartProduct: temparray,\r\n        totalOfall: calPriceSummary(temparray),\r\n        coupon: state.coupon,\r\n        giftCard: state.giftCard,\r\n        etax: state.etax,\r\n        shippingCharge: state.shippingCharge\r\n\r\n\r\n      }\r\n\r\n    }\r\n  } else if (action.type == \"update\") {\r\n    return state\r\n  } else if (action.type == \"remove\") {\r\n    let temparray = state.cartProduct;\r\n\r\n    if (action.data != -1) {\r\n\r\n      temparray.splice(action.data, 1);\r\n      return {\r\n        value: state.value,\r\n        allproductdata: state.allproductdata,\r\n        cartProduct: temparray,\r\n        totalOfall: calPriceSummary(temparray),\r\n        coupon: state.coupon,\r\n        giftCard: state.giftCard,\r\n        etax: state.etax,\r\n        shippingCharge: state.shippingCharge\r\n\r\n      }\r\n    } else {\r\n      return state;\r\n    }\r\n  } else if (action.type == \"incQuantity\") {\r\n    let temparray = state.cartProduct;\r\n    let index = temparray.findIndex(x => x.id == action.data);\r\n    temparray[index].quantity = temparray[index].quantity + 1;\r\n    return {\r\n      value: state.value,\r\n      allproductdata: state.allproductdata,\r\n      cartProduct: temparray,\r\n      totalOfall: calPriceSummary(temparray),\r\n      coupon: state.coupon,\r\n      giftCard: state.giftCard,\r\n      etax: state.etax,\r\n      shippingCharge: state.shippingCharge\r\n\r\n\r\n    }\r\n  } else if (action.type == \"decQuantity\") {\r\n    let temparray = state.cartProduct;\r\n    let index = temparray.findIndex(x => x.id == action.data);\r\n    if (temparray[index].quantity > 1) {\r\n      temparray[index].quantity = temparray[index].quantity - 1;\r\n      return {\r\n        value: state.value,\r\n        allproductdata: state.allproductdata,\r\n        cartProduct: temparray,\r\n        totalOfall: calPriceSummary(temparray),\r\n        coupon: state.coupon,\r\n        giftCard: state.giftCard,\r\n        etax: state.etax,\r\n        shippingCharge: state.shippingCharge\r\n\r\n      }\r\n    }\r\n\r\n  } else {\r\n    return state;\r\n  }\r\n}\r\n\r\nconst calPriceSummary = (inputdata) => {\r\n\r\n  let totalOfall = 0;\r\n  inputdata.forEach(element => {\r\n    totalOfall = totalOfall + (element.price * element.quantity);\r\n  });\r\n  return totalOfall;\r\n}\r\n\r\n"]}